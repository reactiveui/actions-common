name: Common .NET setup and build workflow

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string
        description: 'The build configuration. Eg debug/release'

      productNamespacePrefix:
        required: true
        type: string
        description: 'The namespace prefix used to exclude unrelated items for code coverage'

      useVisualStudioPreview:
        required: true
        type: boolean
        description: 'If the Visual Studio preview edition is used'

      useMauiCheckDotNetTool:
        required: true
        type: boolean
        description: 'Use the Maui Check dotnet tool to make sure Maui is up to date'

      solutionFile:
        required: false
        type: string
        description: 'Optional name of a solution file founded in the srcFolder'
        
      srcFolder:
        required: false
        type: string
        default: 'src'
        description: 'The folder where the source can be found'
        
      performTests:
        required: false
        default: true
        type: boolean
        description: 'If tests need to be conducted'
        
      useNBGV:
        required: false
        default: true
        type: boolean
        description: 'If uses NBGV'
        
      createArtifacts:
        required: false
        default: true
        type: boolean
        description: 'If creates Artifacts'

      installWindowsSdk:
        required: false
        default: true
        type: boolean
        description: 'If installs Windows SDK'

      installWorkflows:
        required: false
        default: true
        type: boolean
        description: 'If installs Workflows'

jobs:
  build:
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:
    - name: Update Visual Studio preview
      if: inputs.useVisualStudioPreview == true
      shell: bash
      run: |
        dotnet tool update -g dotnet-vs
        vs where preview
        vs update preview
        vs modify preview +mobile +desktop +uwp +web
        echo "##vso[task.prependpath]$(vs where preview --prop=InstallationPath)\MSBuild\Current\Bin"
        
    - name: Install Windows SDK 10.0.16299
      if: inputs.installWindowsSdk == true
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/p/?linkid=864422 -OutFile winsdk.exe
        $startInfo = New-Object System.Diagnostics.ProcessStartInfo
        $startInfo.FileName = "winsdk.exe"
        $startInfo.Arguments = "/norestart /quiet"
        $process = New-Object System.Diagnostics.Process
        $process.StartInfo = $startInfo
        $process.Start()
        $process.WaitForExit()
        
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true

    - name: Install .NET 6
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        dotnet-quality: 'preview'

    - name: Install DotNet workloads
      if: inputs.installWorkflows == true
      shell: bash
      run: |
        dotnet workload install android ios tvos macos maui maccatalyst
        
    - name: Run Maui Installation Check
      if: inputs.useMauiCheckDotNetTool == true
      shell: bash
      run: |
        dotnet tool install -g Redth.Net.Maui.Check
        maui-check --non-interactive --fix
        
    - name: Add MSBuild to PATH
      uses: glennawatson/setup-msbuild@v1.0.3
      with:
        prerelease: true

    - name: NBGV
      if: inputs.useNBGV == true
      id: nbgv
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: NuGet Restore
      run: msbuild ${{ inputs.solutionFile }} /t:Restore /p:Configuration=${{ inputs.configuration }} /verbosity:minimal
      working-directory: ${{ inputs.srcFolder }}

    - name: Build
      run: msbuild /t:build,pack /nowarn:MSB4011 /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=${{ inputs.configuration }} ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Run Unit Tests and Generate Coverage
      uses: glennawatson/coverlet-msbuild@v1
      if: inputs.performTests == true
      with:
        project-files: '${{ inputs.srcFolder }}/**/*Tests*.csproj'
        no-build: true
        exclude-filter: '[${{inputs.productNamespacePrefix}}.*.Tests.*]*,[${{inputs.productNamespacePrefix}}.Tests]*,[${{inputs.productNamespacePrefix}}.TestRunner.*]*'
        include-filter: '[${{inputs.productNamespacePrefix}}*]*'
        output-format: cobertura
        configuration: ${{ inputs.configuration }}

    - name: Upload Code Coverage
      uses: codecov/codecov-action@v3
      if: inputs.performTests == true

    - name: Create NuGet Artifacts
      if: inputs.createArtifacts == true
      uses: actions/upload-artifact@master
      with:
        name: nuget
        path: '**/*.nupkg'
