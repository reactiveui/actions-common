name: Common .NET build and release workflow

on:
  workflow_call:
    inputs:
      configuration:
        required: true
        type: string

      productNamespacePrefix:
        required: true
        type: string

      useVisualStudioPreview:
        required: true
        type: boolean

      useMauiCheckDotNetTool:
        required: true
        type: boolean

      solutionFile:
        required: false
        type: string
        description: 'Optional name of a solution file founded in the srcFolder'
        
      srcFolder:
        required: false
        type: string
        default: 'src'
        description: 'The folder where the source can be found'
        
    secrets:
      SIGN_CLIENT_USER_ID:
        required: true
      SIGN_CLIENT_SECRET:
        required: true
      SIGN_CLIENT_CONFIG:
        required: true
      NUGET_API_KEY:
        required: true
        
jobs:
  build-and-release:
    environment:
      name: release      
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:
    - name: Get Current Visual Studio Information
      shell: bash
      run: |
        dotnet tool update -g dotnet-vs
        echo "## About RELEASE ##"
        vs where release
        
    - name: Update Visual Studio Latest Release
      if: inputs.useVisualStudioPreview == true
      shell: bash
      run: |
        echo "## Update RELEASE ##"
        vs update release Enterprise
        vs modify release Enterprise +mobile +desktop +uwp +web
        echo "## About RELEASE Updated ##"
        vs where release
        echo "##vso[task.prependpath]$(vs where release --prop=InstallationPath)\MSBuild\Current\Bin"
        
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        lfs: true

    - name: Install .NET 6
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Install .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Install DotNet workloads
      shell: bash
      run: |
        dotnet workload install android ios tvos macos maui maccatalyst
        
    - name: Run Maui Installation Check
      if: inputs.useMauiCheckDotNetTool == true
      shell: bash
      run: |
        dotnet tool install -g Redth.Net.Maui.Check
        maui-check --non-interactive --fix
        
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3
      with:
        vs-prerelease: true

    - name: NBGV
      id: nbgv
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: NuGet Restore
      run: dotnet restore ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Build
      run: msbuild /t:build,pack /nowarn:MSB4011 /maxcpucount /p:NoPackageAnalysis=true /verbosity:minimal /p:Configuration=${{ inputs.configuration }} ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Create NuGet Artifacts
      uses: actions/upload-artifact@master
      with:
        name: nuget
        path: '**/*.nupkg'
        
    - name: Save SignClient Configuration
      run: 'echo "$SIGN_CLIENT_CONFIG" > SignPackages.json'
      shell: bash
      env:
        SIGN_CLIENT_CONFIG: ${{secrets.SIGN_CLIENT_CONFIG}}

    - name: Sign NuGet Packages
      uses: glennawatson/signclient@v1
      with:
        input-files: '**/*.nupkg'
        sign-client-secret: ${{ secrets.SIGN_CLIENT_SECRET }}
        sign-client-user: ${{ secrets.SIGN_CLIENT_USER_ID }}
        project-name: reactiveui
        description: reactiveui
        config-file: SignPackages.json

    - name: Changelog
      uses: glennawatson/ChangeLog@v1
      id: changelog

    - name: Create Release
      uses: actions/create-release@v1.1.4
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ steps.nbgv.outputs.SemVer2 }}
          release_name: ${{ steps.nbgv.outputs.SemVer2 }}
          body: |
            ${{ steps.changelog.outputs.commitLog }}
            
    - name: NuGet Push
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
        SOURCE_URL: https://api.nuget.org/v3/index.json
      run: |
        dotnet nuget push -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }} **/*.nupkg        
