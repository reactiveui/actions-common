name: Common .NET build and release workflow

on:
  workflow_call:
    inputs:
      configuration:
        required: false
        type: string
        default: 'Release'
        description: 'The build configuration. Eg debug/release'

      productNamespacePrefix:
        required: true
        type: string
        description: 'The namespace prefix used to exclude unrelated items for code coverage'

      useVisualStudioPreview:
        required: false
        default: false
        type: boolean
        description: 'If the Visual Studio preview edition is used'

      solutionFile:
        required: false
        type: string
        description: 'Optional name of a solution file founded in the srcFolder'
        
      srcFolder:
        required: false
        type: string
        default: 'src'
        description: 'The folder where the source can be found'
        
      useNBGV:
        required: false
        default: true
        type: boolean
        description: 'If uses NBGV'
        
      createArtifacts:
        required: false
        default: true
        type: boolean
        description: 'If creates Artifacts'

      installWorkflows:
        required: false
        default: true
        type: boolean
        description: 'If installs Workflows'

    secrets:
      SIGN_ACCOUNT_NAME:
        required: true
      SIGN_PROFILE_NAME:
        required: true
      NUGET_API_KEY:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_CLIENT_ID:
        required: true
permissions:
  id-token: write
  contents: read
jobs:
  build-and-release:
    environment:
      name: release 
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:        
    - name: Get Latest Visual Studio Version
      if: inputs.useVisualStudioPreview == true
      shell: bash
      run: |
        dotnet tool update -g dotnet-vs
        vs where release
        vs update release Enterprise
        vs modify release Enterprise +mobile +desktop +uwp +web
        vs where release

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true

    - name: Setup .NET 6/8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
            6.0.x
            8.0.x

    - name: Install DotNet workloads
      if: inputs.installWorkflows == true
      shell: bash
      run: |
        dotnet workload install android ios tvos macos maui maccatalyst
                
    - name: NBGV
      if: inputs.useNBGV == true
      id: nbgv
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Install NuGet 
      uses: nuget/setup-nuget@v2
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '6.x'

    - name: NuGet Restore 
      run: nuget restore ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Build DotNet
      run: dotnet pack --no-restore --configuration ${{ inputs.configuration }} ${{ inputs.solutionFile }}
      working-directory: ${{ inputs.srcFolder }}

    - name: Sign files with Trusted Signing
      uses: azure/trusted-signing-action@v0.4.0
      with:
        azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
        azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        endpoint: https://eus.codesigning.azure.net/
        trusted-signing-account-name: ${{ secrets.SIGN_ACCOUNT_NAME }}
        certificate-profile-name: ${{ secrets.SIGN_PROFILE_NAME }}
        files-folder: ${{ github.workspace }}
        files-folder-filter: nupkg
        files-folder-recurse: true
        file-digest: SHA256
        timestamp-rfc3161: http://timestamp.acs.microsoft.com
        timestamp-digest: SHA256
          
    - name: Create NuGet Artifacts
      if: inputs.createArtifacts == true
      uses: actions/upload-artifact@master
      with:
        name: nuget
        path: '**/*.nupkg'
        
    # - name: Changelog
    #   uses: glennawatson/ChangeLog@v1
    #   id: changelog

    # - name: Create Release
    #   uses: actions/create-release@v1.1.4
    #   env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #       tag_name: ${{ steps.nbgv.outputs.SemVer2 }}
    #       release_name: ${{ steps.nbgv.outputs.SemVer2 }}
    #       body: |
    #         ${{ steps.changelog.outputs.commitLog }}
            
    # - name: NuGet Push
    #   env:
    #     NUGET_AUTH_TOKEN: ${{ secrets.NUGET_API_KEY }}
    #     SOURCE_URL: https://api.nuget.org/v3/index.json
    #   run: |
    #     dotnet nuget push -s ${{ env.SOURCE_URL }} -k ${{ env.NUGET_AUTH_TOKEN }} **/*.nupkg        
